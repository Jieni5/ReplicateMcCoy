?read.csv
######################################################
# numerical summaries
######################################################
hans.dat <- read.csv("results/hans_results.tsv", sep='\t')
View(hans.dat)
View(hans.dat)
mnli.dat <- read.csv("results/mnli_bytarget.tsv", sep='\t')
View(mnli.dat)
?groupby
??groupby
######################################################
# numerical summaries
######################################################
# load libraries
##############################
library(tidyverse)
?group_by
# MNLI summaries
mnli_summary <- mnli.dat |>
group_by(model) |>
summarise()
View(mnli_summary)
View(mnli_summary)
?summarise
# MNLI summaries
mnli_summary <- mnli.dat |>
group_by(model) |>
summarise(mean=mean(accuracy),
standard_deviation=sd(accuracy),
minimum=min(accuracy),
maximum=max(accuracy))
View(mnli_summary)
View(mnli_summary)
# MNLI summaries
mnli_summary <- mnli.dat |>
summarise(mean=mean(accuracy),
standard_deviation=sd(accuracy),
minimum=min(accuracy),
maximum=max(accuracy))
View(mnli_summary)
View(mnli_summary)
##############################
# MNLI summary
mnli_summary <- mnli.dat |>
group_by(model) |>
summarise(mean=mean(accuracy),                # mean
standard_deviation=sd(accuracy),    # standard dev
minimum=min(accuracy),              # min
maximum=max(accuracy))              # max
View(mnli_summary)
View(mnli_summary)
##############################
# MNLI summary
mnli_summary <- mnli.dat |>
group_by(model) |>
summarise(mean=mean(accuracy),                # mean
standard_deviation=sd(accuracy),    # standard dev
minimum=min(accuracy),              # min
maximum=max(accuracy)) |>              # max
summarise(mean=mean(accuracy),                # mean
standard_deviation=sd(accuracy),    # standard dev
minimum=min(accuracy),              # min
maximum=max(accuracy)) |>              # max
# HANS summary
ha
##############################
# MNLI summary
mnli_summary <- mnli.dat |>
group_by(model) |>
summarise(mean=mean(accuracy),                # mean
standard_deviation=sd(accuracy),    # standard dev
minimum=min(accuracy),              # min
maximum=max(accuracy)) |>              # max
summarise(mean=mean(accuracy),                # mean
standard_deviation=sd(accuracy),    # standard dev
minimum=min(accuracy),              # min
maximum=max(accuracy))             # max
##############################
# MNLI summary
mnli_summary <- mnli.dat |>
group_by(model) |>
summarise(mean=mean(accuracy),                # mean
standard_deviation=sd(accuracy),    # standard dev
minimum=min(accuracy),              # min
maximum=max(accuracy)) |>              # max
summarise(mean=mean(mean),                # mean
standard_deviation=sd(mean),    # standard dev
minimum=min(mean),              # min
maximum=max(mean))             # max
View(mnli_summary)
##############################
# MNLI summary
mnli_summary <- mnli.dat |>
group_by(model) |>
summarise(Mean=mean(accuracy),                # mean
standard_deviation=sd(accuracy),    # standard dev
minimum=min(accuracy),              # min
maximum=max(accuracy)) |>              # max
summarise(mean=mean(Mean),                # mean
standard_deviation=sd(Mean),    # standard dev
minimum=min(Mean),              # min
maximum=max(Mean))             # max
View(mnli_summary)
##############################
# MNLI summary
mnli_summary <- mnli.dat |>
group_by(model) |>                        # group by model
summarise(Mean=mean(accuracy)) |>
summarise(mean=mean(Mean),                # mean
standard_deviation=sd(Mean),    # standard dev
minimum=min(Mean),              # min
maximum=max(Mean))              # max
View(mnli_summary)
View(mnli_summary)
################################################################################
# HANS summary
hans.summary <- hans.dat |>
group_by(target) |>
group_by(heuristic) |>
summarise(Mean=mean(accuracy),
standard_dev=std(accuracy),
minimum=min(accuracy),
maximum=max(accuracy))
################################################################################
# HANS summary
hans.summary <- hans.dat |>
group_by(target) |>
group_by(heuristic) |>
summarise(Mean=mean(accuracy),
standard_dev=sd(accuracy),
minimum=min(accuracy),
maximum=max(accuracy))
View(mnli_summary)
View(hans.summary)
?filter
################################################################################
# HANS summary
hans.summary <- hans.dat |>
filter(target="entailment") |>
group_by(heuristic) |>
summarise(Mean=mean(accuracy),
standard_dev=sd(accuracy),
minimum=min(accuracy),
maximum=max(accuracy))
################################################################################
# HANS summary
hans.summary <- hans.dat |>
filter(target=="entailment") |>
group_by(heuristic) |>
summarise(Mean=mean(accuracy),
standard_dev=sd(accuracy),
minimum=min(accuracy),
maximum=max(accuracy))
View(hans.summary)
View(hans.summary)
################################################################################
# HANS summary
hans.consistent <- hans.dat |>
filter(target=="entailment") |>
group_by(heuristic) |>
summarise(Mean=mean(accuracy),
standard_dev=sd(accuracy),
minimum=min(accuracy),
maximum=max(accuracy))
source("~/Documents/nlp-midterm/ReplicateMcCoy/generate.R")
View(HANS.inconsistent)
View(HANS.inconsistent)
View(mnli_summary)
source("~/Documents/nlp-midterm/ReplicateMcCoy/generate.R")
################################################################################
# mccoy replication - numerical summaries
################################################################################
# load libraries
##############################
library(tidyverse)
##############################
HANS.dat <- read.csv("results/hans_results.tsv", sep='\t')
MNLI.dat <- read.csv("results/mnli_bytarget.tsv", sep='\t')
################################################################################
# MNLI summary
MNLI_summary <- MNLI.dat |>
group_by(model) |>                        # group by model
summarise(Mean=mean(accuracy)) |>
summarise(Mean=mean(Mean),                # mean
standard_dev=sd(Mean),          # standard dev
Minimum=min(Mean),              # min
Maximum=max(Mean))              # max
################################################################################
# HANS summary
################################################################################
# summary of examples consistent with heuristic
HANS.consistent <- HANS.dat |>
filter(target=="entailment") |>            # filter out inconsistent egs.
group_by(heuristic) |>                     # group by heuristic
summarise(Mean=mean(accuracy),
standard_dev=sd(accuracy),
Minimum=min(accuracy),
Maximum=max(accuracy))
# summary of examples inconsistent wit heuristic
HANS.inconsistent <- HANS.dat |>
filter(target=="non-entailment") |>        # filter out consistent egs.
group_by(heuristic) |>                     # group by heuristic
summarise(Mean=mean(accuracy),
standard_dev=sd(accuracy),
Minimum=min(accuracy),
Maximum=max(accuracy))
# Reshape MNLI data
MNLI_long <- MNLI_summary |>
pivot_longer(cols = everything(), names_to = "Stat", values_to = "MNLI") |>
mutate(Stat = case_when(
Stat == "standard_dev" ~ "Standard deviation",
TRUE ~ Stat
))
# Reshape HANS consistent data
HANS_consistent_long <- HANS.consistent |>
pivot_longer(cols = -heuristic, names_to = "Stat", values_to = "value") |>
pivot_wider(names_from = heuristic, values_from = value) |>
rename(
Const_Con = constituent,
Lexical_Con = lexical_overlap,
Subseq_Con = subsequence
) |>
mutate(Stat = case_when(
Stat == "standard_dev" ~ "Standard deviation",
TRUE ~ Stat
))
View(HANS.consistent)
View(HANS.consistent)
# Reshape HANS consistent data
HANS_consistent_long <- HANS.consistent |>
pivot_longer(cols = -heuristic, names_to = "Stat", values_to = "value") |>
pivot_wider(names_from = heuristic, values_from = value) |>
rename(
Const_Con = constituent,
Lexical_Con = lexical,
Subseq_Con = subsequence
) |>
mutate(Stat = case_when(
Stat == "standard_dev" ~ "Standard deviation",
TRUE ~ Stat
))
# Reshape HANS inconsistent data
HANS_inconsistent_long <- HANS.inconsistent |>
pivot_longer(cols = -heuristic, names_to = "Stat", values_to = "value") |>
pivot_wider(names_from = heuristic, values_from = value) |>
rename(
Const_Incon = constituent,
Lexical_Incon = lexical,
Subseq_Incon = subsequence
) |>
mutate(Stat = case_when(
Stat == "standard_dev" ~ "Standard deviation",
TRUE ~ Stat
))
# Join the dataframes
combined_summary <- MNLI_long |>
full_join(HANS_consistent_long, by = "Stat") |>
full_join(HANS_inconsistent_long, by = "Stat")
# Reorder rows and columns to match the image
stat_order <- c("Minimum", "Maximum", "Mean", "Standard deviation")
combined_summary <- combined_summary |>
mutate(Stat = factor(Stat, levels = stat_order)) |>
arrange(Stat) |>
select(Stat, MNLI, Lexical_Con, Subseq_Con, Const_Con, Lexical_Incon, Subseq_Incon, Const_Incon)
View(combined_summary)
View(combined_summary)
View(MNLI_summary)
View(MNLI_summary)
################################################################################
# MNLI summary
MNLI_summary <- MNLI.dat |>
group_by(model) |>                        # group by model
summarise(Mean=mean(accuracy)) |>
summarise(Mean=mean(Mean),                # mean
standard_dev=sd(Mean),          # standard dev
Minimum=min(Mean),              # min
Maximum=max(Mean))              # max
View(MNLI_summary)
##############################
HANS.dat <- read.csv("results/hans_results.tsv", sep='\t')
MNLI.dat <- read.csv("results/mnli_bytarget.tsv", sep='\t')
################################################################################
# MNLI summary
MNLI_summary <- MNLI.dat |>
group_by(model) |>                        # group by model
summarise(Mean=mean(accuracy)) |>
summarise(Mean=mean(Mean),                # mean
standard_dev=sd(Mean),          # standard dev
Minimum=min(Mean),              # min
Maximum=max(Mean))              # max
################################################################################
# mccoy replication - numerical summaries
################################################################################
# load libraries
##############################
library(tidyverse)
##############################
HANS.dat <- read_csv("results/hans_results.tsv", sep='\t')
MNLI.dat <- read_csv("results/mnli_bytarget.tsv", sep='\t')
################################################################################
# MNLI summary
MNLI.summary <- MNLI.dat |>
group_by(model) |>                        # group by model
summarise(Mean=mean(accuracy)) |>
summarise(Mean=mean(Mean),                # mean
standard_dev=sd(Mean),          # standard dev
Minimum=min(Mean),              # min
Maximum=max(Mean))              # max
View(MNLI.summary)
View(MNLI.summary)
################################################################################
# mccoy replication - numerical summaries
################################################################################
# load libraries
##############################
library(tidyverse)
##############################
HANS.dat <- read_csv("results/hans_results.tsv", sep='\t')
##############################
HANS.dat <- read_csv("results/hans_results.tsv")
MNLI.dat <- read_csv("results/mnli_bytarget.tsv")
################################################################################
# MNLI summary
MNLI.summary <- MNLI.dat |>
group_by(model) |>                        # group by model
summarise(Mean=mean(accuracy)) |>
summarise(Mean=mean(Mean),                # mean
standard_dev=sd(Mean),          # standard dev
Minimum=min(Mean),              # min
Maximum=max(Mean))              # max
View(MNLI.dat)
View(MNLI.dat)
##############################
HANS.dat <- read_csv("results/hans_results.tsv", sep='\t')
View(HANS.dat)
View(HANS.dat)
##############################
HANS.dat <- read_csv("results/hans_results.tsv", sep='\t')
View(hans.dat)
View(HANS.dat)
View(HANS.dat)
##############################
HANS.dat <- read.csv("results/hans_results.tsv", sep='\t')
View(HANS.dat)
source("~/Documents/nlp-midterm/ReplicateMcCoy/generate.R")
View(MNLI_long)
